	section	.text,"ax",@progbits
	assume	adl = 1
	section	.text,"ax",@progbits
	public	_absolute
_absolute:
	ld	hl, -1
	call	__frameset
	ld	d, (ix + 9)
	ld	bc, (ix + 10)
	ld	a, (ix + 13)
	push	bc
	pop	hl
	ld	e, a
	call	__fmul
	push	bc
	pop	iy
	ld	(ix - 1), a
	ld	bc, (ix + 6)
	ld	a, d
	push	bc
	pop	hl
	ld	e, d
	call	__fmul
	lea	hl, iy
	ld	e, (ix - 1)
	call	__fadd
	ld	l, a
	push	hl
	push	bc
	call	_sqrt
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_mbrot
_mbrot:
	ld	hl, -22
	call	__frameset
	ld	bc, (ix + 6)
	ld	e, 64
	ld	d, 67
	push	bc
	pop	hl
	push	bc
	pop	iy
	add	iy, iy
	sbc	hl, hl
	ld	a, l
	call	__ltof
	ld	hl, 4194304
	call	__fmul
	ld	hl, -6291456
	ld	e, d
	call	__fdiv
	or	a, a
	sbc	hl, hl
	ld	e, -64
	call	__fadd
	ld	(ix - 17), bc
	ld	(ix - 18), a
	ld	hl, (ix + 9)
	push	hl
	pop	iy
	push	hl
	pop	bc
	add	iy, iy
	sbc	hl, hl
	ld	a, l
	call	__ltof
	ld	iy, 0
	lea	hl, iy
	ld	e, 64
	call	__fmul
	ld	hl, 7340032
	ld	e, d
	call	__fdiv
	ld	hl, -8388608
	ld	e, -65
	call	__fadd
	ld	(ix - 21), bc
	ld	(ix - 22), a
	lea	bc, iy
	xor	a, a
	ld	e, a
	ld	d, a
	ld	(ix - 1), a
	ld	(ix - 6), a
BB1_1:
	ld	a, e
	ld	(ix - 9), bc
	push	bc
	pop	hl
	ld	(ix - 10), e
	call	__fmul
	ld	(ix - 4), bc
	ld	(ix - 5), a
	lea	bc, iy
	ld	a, d
	ld	(ix - 13), iy
	lea	hl, iy
	ld	(ix - 14), d
	ld	e, d
	call	__fmul
	ld	hl, (ix - 4)
	ld	e, (ix - 5)
	call	__fadd
	ld	l, a
	push	hl
	push	bc
	call	_sqrt
	push	hl
	pop	bc
	ld	a, e
	pop	hl
	pop	hl
	or	a, a
	sbc	hl, hl
	ld	e, 64
	call	__fcmp
	jp	m, BB1_4
	ld	a, (ix - 6)
	cp	a, 50
	jr	nc, BB1_4
	ld	hl, (ix - 9)
	push	hl
	pop	bc
	ld	e, (ix - 10)
	ld	a, e
	call	__fneg
	push	bc
	pop	iy
	ld	d, a
	push	hl
	pop	bc
	ld	a, e
	lea	hl, iy
	ld	e, d
	call	__fmul
	push	bc
	pop	iy
	ld	d, a
	ld	bc, (ix - 13)
	ld	a, (ix - 14)
	push	bc
	pop	hl
	ld	e, a
	call	__fmul
	lea	hl, iy
	ld	e, d
	call	__fadd
	push	bc
	pop	hl
	ld	e, a
	ld	bc, (ix - 17)
	ld	a, (ix - 18)
	call	__fadd
	push	bc
	pop	iy
	ld	d, a
	or	a, a
	sbc	hl, hl
	ld	e, 64
	call	__fmul
	ld	hl, (ix - 9)
	ld	e, (ix - 10)
	call	__fmul
	ld	hl, (ix - 21)
	ld	e, (ix - 22)
	call	__fadd
	ld	e, a
	ld	a, (ix - 6)
	inc	a
	ld	(ix - 6), a
	ld	a, (ix - 1)
	add	a, 2
	ld	(ix - 1), a
	jp	BB1_1
BB1_4:
	ld	a, (ix - 1)
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_main
_main:
	ld	hl, -9
	call	__frameset
	call	_gfx_Begin
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_FillScreen
	xor	a, a
	ld	de, 0
	pop	hl
	push	de
	pop	iy
BB2_1:
	lea	hl, iy
	ld	bc, 320
	or	a, a
	sbc	hl, bc
	ld	l, a
	jr	z, BB2_5
BB2_2:
	ld	(ix - 3), hl
	push	de
	pop	bc
	ex	de, hl
	ld	de, 240
	or	a, a
	sbc	hl, de
	jr	z, BB2_4
	ld	(ix - 9), bc
	push	bc
	push	iy
	ld	(ix - 6), iy
	call	_mbrot
	ld	l, a
	pop	de
	pop	de
	push	hl
	call	_gfx_SetColor
	pop	hl
	ld	hl, (ix - 3)
	push	hl
	ld	hl, (ix - 6)
	push	hl
	call	_gfx_SetPixel
	pop	hl
	pop	hl
	call	_os_GetCSC
	ld	de, (ix - 9)
	ld	hl, (ix - 3)
	ld	iy, (ix - 6)
	inc	de
	inc	l
	or	a, a
	ld	a, 0
	jr	z, BB2_2
	jr	BB2_6
BB2_4:
	inc	iy
	ld	de, 0
	jr	BB2_1
BB2_5:
	call	_os_GetCSC
	or	a, a
	jr	z, BB2_5
BB2_6:
	call	_gfx_End
	or	a, a
	sbc	hl, hl
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	ident	"clang version 15.0.0 (https://github.com/jacobly0/llvm-project 5f8512f22751066573aa48ac848a6d2195838ac3)"
	extern	_gfx_FillScreen
	extern	__Unwind_SjLj_Register
	extern	__frameset
	extern	__Unwind_SjLj_Unregister
	extern	__fneg
	extern	__fdiv
	extern	__fadd
	extern	_gfx_Begin
	extern	_gfx_SetColor
	extern	_gfx_SetPixel
	extern	_sqrt
	extern	__ltof
	extern	_gfx_End
	extern	_os_GetCSC
	extern	__fcmp
	extern	__fmul
